// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace OpenMahjong
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GameState : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public GameState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public OpenMahjong.FixedString Title { get { return (new OpenMahjong.FixedString()).__assign(__p.bb_pos + 0, __p.bb); } }
  public OpenMahjong.Player Players(int j) { return (new OpenMahjong.Player()).__assign(__p.bb_pos + 256 + j * 512, __p.bb); }
  public uint PlayerLen { get { return __p.bb.GetUint(__p.bb_pos + 2304); } }
  public void MutatePlayerLen(uint player_len) { __p.bb.PutUint(__p.bb_pos + 2304, player_len); }
  public uint Bakaze { get { return __p.bb.GetUint(__p.bb_pos + 2308); } }
  public void MutateBakaze(uint bakaze) { __p.bb.PutUint(__p.bb_pos + 2308, bakaze); }
  public uint Zikaze { get { return __p.bb.GetUint(__p.bb_pos + 2312); } }
  public void MutateZikaze(uint zikaze) { __p.bb.PutUint(__p.bb_pos + 2312, zikaze); }
  public uint Tsumobou { get { return __p.bb.GetUint(__p.bb_pos + 2316); } }
  public void MutateTsumobou(uint tsumobou) { __p.bb.PutUint(__p.bb_pos + 2316, tsumobou); }
  public uint Riichibou { get { return __p.bb.GetUint(__p.bb_pos + 2320); } }
  public void MutateRiichibou(uint riichibou) { __p.bb.PutUint(__p.bb_pos + 2320, riichibou); }
  public uint Teban { get { return __p.bb.GetUint(__p.bb_pos + 2324); } }
  public void MutateTeban(uint teban) { __p.bb.PutUint(__p.bb_pos + 2324, teban); }
  public OpenMahjong.Taku Taku { get { return (new OpenMahjong.Taku()).__assign(__p.bb_pos + 2328, __p.bb); } }
  public uint TakuCursol { get { return __p.bb.GetUint(__p.bb_pos + 3012); } }
  public void MutateTakuCursol(uint taku_cursol) { __p.bb.PutUint(__p.bb_pos + 3012, taku_cursol); }

  public static Offset<OpenMahjong.GameState> CreateGameState(FlatBufferBuilder builder, byte[] title_N1, byte[] title_N2, byte[] title_N3, byte[] title_N4, byte[] title_N5, byte[] title_N6, byte[] title_N7, byte[] title_N8, byte[,] players_name_N1, byte[,] players_name_N2, byte[,] players_name_N3, byte[,] players_name_N4, byte[,] players_name_N5, byte[,] players_name_N6, byte[,] players_name_N7, byte[,] players_name_N8, byte[,,] players_mentsu_pai_list_PaiNum, byte[,,] players_mentsu_pai_list_Id, OpenMahjong.MentsuFlag[,,] players_mentsu_pai_list_Flag, uint[,] players_mentsu_PaiLen, uint[] players_MentsuLen, byte[,] players_tehai_PaiNum, byte[,] players_tehai_Id, bool[,] players_tehai_IsTsumogiri, bool[,] players_tehai_IsRiichi, bool[,] players_tehai_IsNakare, uint[] players_TehaiLen, byte[,] players_kawahai_PaiNum, byte[,] players_kawahai_Id, bool[,] players_kawahai_IsTsumogiri, bool[,] players_kawahai_IsRiichi, bool[,] players_kawahai_IsNakare, uint[] players_KawahaiLen, byte[] players_tsumohai_PaiNum, byte[] players_tsumohai_Id, bool[] players_tsumohai_IsTsumogiri, bool[] players_tsumohai_IsRiichi, bool[] players_tsumohai_IsNakare, bool[] players_IsTsumo, bool[] players_IsRiichi, bool[] players_IsIppatsu, int[] players_Score, uint PlayerLen, uint Bakaze, uint Zikaze, uint Tsumobou, uint Riichibou, uint Teban, byte[] taku_n1_PaiNum, byte[] taku_n1_Id, bool[] taku_n1_IsTsumogiri, bool[] taku_n1_IsRiichi, bool[] taku_n1_IsNakare, byte[] taku_n2_PaiNum, byte[] taku_n2_Id, bool[] taku_n2_IsTsumogiri, bool[] taku_n2_IsRiichi, bool[] taku_n2_IsNakare, byte[] taku_n3_PaiNum, byte[] taku_n3_Id, bool[] taku_n3_IsTsumogiri, bool[] taku_n3_IsRiichi, bool[] taku_n3_IsNakare, byte[] taku_n4_PaiNum, byte[] taku_n4_Id, bool[] taku_n4_IsTsumogiri, bool[] taku_n4_IsRiichi, bool[] taku_n4_IsNakare, byte[] taku_n5_PaiNum, byte[] taku_n5_Id, bool[] taku_n5_IsTsumogiri, bool[] taku_n5_IsRiichi, bool[] taku_n5_IsNakare, uint taku_Length, uint TakuCursol) {
    builder.Prep(4, 3016);
    builder.PutUint(TakuCursol);
    builder.Prep(4, 684);
    builder.PutUint(taku_Length);
    for (int _idx0 = 8; _idx0 > 0; _idx0--) {
      builder.Prep(1, 5);
      builder.PutBool(taku_n5_IsNakare[_idx0-1]);
      builder.PutBool(taku_n5_IsRiichi[_idx0-1]);
      builder.PutBool(taku_n5_IsTsumogiri[_idx0-1]);
      builder.PutByte(taku_n5_Id[_idx0-1]);
      builder.PutByte(taku_n5_PaiNum[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.Prep(1, 5);
      builder.PutBool(taku_n4_IsNakare[_idx0-1]);
      builder.PutBool(taku_n4_IsRiichi[_idx0-1]);
      builder.PutBool(taku_n4_IsTsumogiri[_idx0-1]);
      builder.PutByte(taku_n4_Id[_idx0-1]);
      builder.PutByte(taku_n4_PaiNum[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.Prep(1, 5);
      builder.PutBool(taku_n3_IsNakare[_idx0-1]);
      builder.PutBool(taku_n3_IsRiichi[_idx0-1]);
      builder.PutBool(taku_n3_IsTsumogiri[_idx0-1]);
      builder.PutByte(taku_n3_Id[_idx0-1]);
      builder.PutByte(taku_n3_PaiNum[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.Prep(1, 5);
      builder.PutBool(taku_n2_IsNakare[_idx0-1]);
      builder.PutBool(taku_n2_IsRiichi[_idx0-1]);
      builder.PutBool(taku_n2_IsTsumogiri[_idx0-1]);
      builder.PutByte(taku_n2_Id[_idx0-1]);
      builder.PutByte(taku_n2_PaiNum[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.Prep(1, 5);
      builder.PutBool(taku_n1_IsNakare[_idx0-1]);
      builder.PutBool(taku_n1_IsRiichi[_idx0-1]);
      builder.PutBool(taku_n1_IsTsumogiri[_idx0-1]);
      builder.PutByte(taku_n1_Id[_idx0-1]);
      builder.PutByte(taku_n1_PaiNum[_idx0-1]);
    }
    builder.PutUint(Teban);
    builder.PutUint(Riichibou);
    builder.PutUint(Tsumobou);
    builder.PutUint(Zikaze);
    builder.PutUint(Bakaze);
    builder.PutUint(PlayerLen);
    for (int _idx0 = 4; _idx0 > 0; _idx0--) {
      builder.Prep(4, 512);
      builder.PutInt(players_Score[_idx0-1]);
      builder.PutBool(players_IsIppatsu[_idx0-1]);
      builder.PutBool(players_IsRiichi[_idx0-1]);
      builder.PutBool(players_IsTsumo[_idx0-1]);
      builder.Prep(1, 5);
      builder.PutBool(players_tsumohai_IsNakare[_idx0-1]);
      builder.PutBool(players_tsumohai_IsRiichi[_idx0-1]);
      builder.PutBool(players_tsumohai_IsTsumogiri[_idx0-1]);
      builder.PutByte(players_tsumohai_Id[_idx0-1]);
      builder.PutByte(players_tsumohai_PaiNum[_idx0-1]);
      builder.PutUint(players_KawahaiLen[_idx0-1]);
      for (int _idx1 = 20; _idx1 > 0; _idx1--) {
        builder.Prep(1, 5);
        builder.PutBool(players_kawahai_IsNakare[_idx0-1,_idx1-1]);
        builder.PutBool(players_kawahai_IsRiichi[_idx0-1,_idx1-1]);
        builder.PutBool(players_kawahai_IsTsumogiri[_idx0-1,_idx1-1]);
        builder.PutByte(players_kawahai_Id[_idx0-1,_idx1-1]);
        builder.PutByte(players_kawahai_PaiNum[_idx0-1,_idx1-1]);
      }
      builder.PutUint(players_TehaiLen[_idx0-1]);
      builder.Pad(3);
      for (int _idx1 = 13; _idx1 > 0; _idx1--) {
        builder.Prep(1, 5);
        builder.PutBool(players_tehai_IsNakare[_idx0-1,_idx1-1]);
        builder.PutBool(players_tehai_IsRiichi[_idx0-1,_idx1-1]);
        builder.PutBool(players_tehai_IsTsumogiri[_idx0-1,_idx1-1]);
        builder.PutByte(players_tehai_Id[_idx0-1,_idx1-1]);
        builder.PutByte(players_tehai_PaiNum[_idx0-1,_idx1-1]);
      }
      builder.PutUint(players_MentsuLen[_idx0-1]);
      for (int _idx1 = 4; _idx1 > 0; _idx1--) {
        builder.Prep(4, 16);
        builder.PutUint(players_mentsu_PaiLen[_idx0-1,_idx1-1]);
        for (int _idx2 = 4; _idx2 > 0; _idx2--) {
          builder.Prep(1, 3);
          builder.PutByte((byte)players_mentsu_pai_list_Flag[_idx0-1,_idx1-1,_idx2-1]);
          builder.PutByte(players_mentsu_pai_list_Id[_idx0-1,_idx1-1,_idx2-1]);
          builder.PutByte(players_mentsu_pai_list_PaiNum[_idx0-1,_idx1-1,_idx2-1]);
        }
      }
      builder.Prep(1, 256);
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N8[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N7[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N6[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N5[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N4[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N3[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N2[_idx0-1,_idx1-1]);
      }
      for (int _idx1 = 32; _idx1 > 0; _idx1--) {
        builder.PutByte(players_name_N1[_idx0-1,_idx1-1]);
      }
    }
    builder.Prep(1, 256);
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N8[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N7[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N6[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N5[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N4[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N3[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N2[_idx0-1]);
    }
    for (int _idx0 = 32; _idx0 > 0; _idx0--) {
      builder.PutByte(title_N1[_idx0-1]);
    }
    return new Offset<OpenMahjong.GameState>(builder.Offset);
  }
  public GameStateT UnPack() {
    var _o = new GameStateT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GameStateT _o) {
    _o.Title = this.Title.UnPack();
    _o.Players = new OpenMahjong.PlayerT[4];
    for (var _j = 0; _j < 4; ++_j) { _o.Players[_j] = this.Players(_j).UnPack(); }
    _o.PlayerLen = this.PlayerLen;
    _o.Bakaze = this.Bakaze;
    _o.Zikaze = this.Zikaze;
    _o.Tsumobou = this.Tsumobou;
    _o.Riichibou = this.Riichibou;
    _o.Teban = this.Teban;
    _o.Taku = this.Taku.UnPack();
    _o.TakuCursol = this.TakuCursol;
  }
  public static Offset<OpenMahjong.GameState> Pack(FlatBufferBuilder builder, GameStateT _o) {
    if (_o == null) return default(Offset<OpenMahjong.GameState>);
    var _title_n1 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n1[idx0] = _o.Title.N1[idx0];}
    var _title_n2 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n2[idx0] = _o.Title.N2[idx0];}
    var _title_n3 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n3[idx0] = _o.Title.N3[idx0];}
    var _title_n4 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n4[idx0] = _o.Title.N4[idx0];}
    var _title_n5 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n5[idx0] = _o.Title.N5[idx0];}
    var _title_n6 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n6[idx0] = _o.Title.N6[idx0];}
    var _title_n7 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n7[idx0] = _o.Title.N7[idx0];}
    var _title_n8 = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_title_n8[idx0] = _o.Title.N8[idx0];}
    var _players_name_n1 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n1[idx0,idx1] = _o.Players[idx0].Name.N1[idx1];}}
    var _players_name_n2 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n2[idx0,idx1] = _o.Players[idx0].Name.N2[idx1];}}
    var _players_name_n3 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n3[idx0,idx1] = _o.Players[idx0].Name.N3[idx1];}}
    var _players_name_n4 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n4[idx0,idx1] = _o.Players[idx0].Name.N4[idx1];}}
    var _players_name_n5 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n5[idx0,idx1] = _o.Players[idx0].Name.N5[idx1];}}
    var _players_name_n6 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n6[idx0,idx1] = _o.Players[idx0].Name.N6[idx1];}}
    var _players_name_n7 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n7[idx0,idx1] = _o.Players[idx0].Name.N7[idx1];}}
    var _players_name_n8 = new byte[4,32];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 32; ++idx1) {_players_name_n8[idx0,idx1] = _o.Players[idx0].Name.N8[idx1];}}
    var _players_mentsu_pai_list_pai_num = new byte[4,4,4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 4; ++idx1) {for (var idx2 = 0; idx2 < 4; ++idx2) {_players_mentsu_pai_list_pai_num[idx0,idx1,idx2] = _o.Players[idx0].Mentsu[idx1].PaiList[idx2].PaiNum;}}}
    var _players_mentsu_pai_list_id = new byte[4,4,4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 4; ++idx1) {for (var idx2 = 0; idx2 < 4; ++idx2) {_players_mentsu_pai_list_id[idx0,idx1,idx2] = _o.Players[idx0].Mentsu[idx1].PaiList[idx2].Id;}}}
    var _players_mentsu_pai_list_flag = new OpenMahjong.MentsuFlag[4,4,4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 4; ++idx1) {for (var idx2 = 0; idx2 < 4; ++idx2) {_players_mentsu_pai_list_flag[idx0,idx1,idx2] = _o.Players[idx0].Mentsu[idx1].PaiList[idx2].Flag;}}}
    var _players_mentsu_pai_len = new uint[4,4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 4; ++idx1) {_players_mentsu_pai_len[idx0,idx1] = _o.Players[idx0].Mentsu[idx1].PaiLen;}}
    var _players_mentsu_len = new uint[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_mentsu_len[idx0] = _o.Players[idx0].MentsuLen;}
    var _players_tehai_pai_num = new byte[4,13];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 13; ++idx1) {_players_tehai_pai_num[idx0,idx1] = _o.Players[idx0].Tehai[idx1].PaiNum;}}
    var _players_tehai_id = new byte[4,13];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 13; ++idx1) {_players_tehai_id[idx0,idx1] = _o.Players[idx0].Tehai[idx1].Id;}}
    var _players_tehai_is_tsumogiri = new bool[4,13];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 13; ++idx1) {_players_tehai_is_tsumogiri[idx0,idx1] = _o.Players[idx0].Tehai[idx1].IsTsumogiri;}}
    var _players_tehai_is_riichi = new bool[4,13];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 13; ++idx1) {_players_tehai_is_riichi[idx0,idx1] = _o.Players[idx0].Tehai[idx1].IsRiichi;}}
    var _players_tehai_is_nakare = new bool[4,13];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 13; ++idx1) {_players_tehai_is_nakare[idx0,idx1] = _o.Players[idx0].Tehai[idx1].IsNakare;}}
    var _players_tehai_len = new uint[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_tehai_len[idx0] = _o.Players[idx0].TehaiLen;}
    var _players_kawahai_pai_num = new byte[4,20];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 20; ++idx1) {_players_kawahai_pai_num[idx0,idx1] = _o.Players[idx0].Kawahai[idx1].PaiNum;}}
    var _players_kawahai_id = new byte[4,20];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 20; ++idx1) {_players_kawahai_id[idx0,idx1] = _o.Players[idx0].Kawahai[idx1].Id;}}
    var _players_kawahai_is_tsumogiri = new bool[4,20];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 20; ++idx1) {_players_kawahai_is_tsumogiri[idx0,idx1] = _o.Players[idx0].Kawahai[idx1].IsTsumogiri;}}
    var _players_kawahai_is_riichi = new bool[4,20];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 20; ++idx1) {_players_kawahai_is_riichi[idx0,idx1] = _o.Players[idx0].Kawahai[idx1].IsRiichi;}}
    var _players_kawahai_is_nakare = new bool[4,20];
    for (var idx0 = 0; idx0 < 4; ++idx0) {for (var idx1 = 0; idx1 < 20; ++idx1) {_players_kawahai_is_nakare[idx0,idx1] = _o.Players[idx0].Kawahai[idx1].IsNakare;}}
    var _players_kawahai_len = new uint[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_kawahai_len[idx0] = _o.Players[idx0].KawahaiLen;}
    var _players_tsumohai_pai_num = new byte[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_tsumohai_pai_num[idx0] = _o.Players[idx0].Tsumohai.PaiNum;}
    var _players_tsumohai_id = new byte[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_tsumohai_id[idx0] = _o.Players[idx0].Tsumohai.Id;}
    var _players_tsumohai_is_tsumogiri = new bool[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_tsumohai_is_tsumogiri[idx0] = _o.Players[idx0].Tsumohai.IsTsumogiri;}
    var _players_tsumohai_is_riichi = new bool[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_tsumohai_is_riichi[idx0] = _o.Players[idx0].Tsumohai.IsRiichi;}
    var _players_tsumohai_is_nakare = new bool[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_tsumohai_is_nakare[idx0] = _o.Players[idx0].Tsumohai.IsNakare;}
    var _players_is_tsumo = new bool[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_is_tsumo[idx0] = _o.Players[idx0].IsTsumo;}
    var _players_is_riichi = new bool[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_is_riichi[idx0] = _o.Players[idx0].IsRiichi;}
    var _players_is_ippatsu = new bool[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_is_ippatsu[idx0] = _o.Players[idx0].IsIppatsu;}
    var _players_score = new int[4];
    for (var idx0 = 0; idx0 < 4; ++idx0) {_players_score[idx0] = _o.Players[idx0].Score;}
    var _taku_n1_pai_num = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n1_pai_num[idx0] = _o.Taku.N1[idx0].PaiNum;}
    var _taku_n1_id = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n1_id[idx0] = _o.Taku.N1[idx0].Id;}
    var _taku_n1_is_tsumogiri = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n1_is_tsumogiri[idx0] = _o.Taku.N1[idx0].IsTsumogiri;}
    var _taku_n1_is_riichi = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n1_is_riichi[idx0] = _o.Taku.N1[idx0].IsRiichi;}
    var _taku_n1_is_nakare = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n1_is_nakare[idx0] = _o.Taku.N1[idx0].IsNakare;}
    var _taku_n2_pai_num = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n2_pai_num[idx0] = _o.Taku.N2[idx0].PaiNum;}
    var _taku_n2_id = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n2_id[idx0] = _o.Taku.N2[idx0].Id;}
    var _taku_n2_is_tsumogiri = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n2_is_tsumogiri[idx0] = _o.Taku.N2[idx0].IsTsumogiri;}
    var _taku_n2_is_riichi = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n2_is_riichi[idx0] = _o.Taku.N2[idx0].IsRiichi;}
    var _taku_n2_is_nakare = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n2_is_nakare[idx0] = _o.Taku.N2[idx0].IsNakare;}
    var _taku_n3_pai_num = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n3_pai_num[idx0] = _o.Taku.N3[idx0].PaiNum;}
    var _taku_n3_id = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n3_id[idx0] = _o.Taku.N3[idx0].Id;}
    var _taku_n3_is_tsumogiri = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n3_is_tsumogiri[idx0] = _o.Taku.N3[idx0].IsTsumogiri;}
    var _taku_n3_is_riichi = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n3_is_riichi[idx0] = _o.Taku.N3[idx0].IsRiichi;}
    var _taku_n3_is_nakare = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n3_is_nakare[idx0] = _o.Taku.N3[idx0].IsNakare;}
    var _taku_n4_pai_num = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n4_pai_num[idx0] = _o.Taku.N4[idx0].PaiNum;}
    var _taku_n4_id = new byte[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n4_id[idx0] = _o.Taku.N4[idx0].Id;}
    var _taku_n4_is_tsumogiri = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n4_is_tsumogiri[idx0] = _o.Taku.N4[idx0].IsTsumogiri;}
    var _taku_n4_is_riichi = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n4_is_riichi[idx0] = _o.Taku.N4[idx0].IsRiichi;}
    var _taku_n4_is_nakare = new bool[32];
    for (var idx0 = 0; idx0 < 32; ++idx0) {_taku_n4_is_nakare[idx0] = _o.Taku.N4[idx0].IsNakare;}
    var _taku_n5_pai_num = new byte[8];
    for (var idx0 = 0; idx0 < 8; ++idx0) {_taku_n5_pai_num[idx0] = _o.Taku.N5[idx0].PaiNum;}
    var _taku_n5_id = new byte[8];
    for (var idx0 = 0; idx0 < 8; ++idx0) {_taku_n5_id[idx0] = _o.Taku.N5[idx0].Id;}
    var _taku_n5_is_tsumogiri = new bool[8];
    for (var idx0 = 0; idx0 < 8; ++idx0) {_taku_n5_is_tsumogiri[idx0] = _o.Taku.N5[idx0].IsTsumogiri;}
    var _taku_n5_is_riichi = new bool[8];
    for (var idx0 = 0; idx0 < 8; ++idx0) {_taku_n5_is_riichi[idx0] = _o.Taku.N5[idx0].IsRiichi;}
    var _taku_n5_is_nakare = new bool[8];
    for (var idx0 = 0; idx0 < 8; ++idx0) {_taku_n5_is_nakare[idx0] = _o.Taku.N5[idx0].IsNakare;}
    var _taku_length = _o.Taku.Length;
    return CreateGameState(
      builder,
      _title_n1,
      _title_n2,
      _title_n3,
      _title_n4,
      _title_n5,
      _title_n6,
      _title_n7,
      _title_n8,
      _players_name_n1,
      _players_name_n2,
      _players_name_n3,
      _players_name_n4,
      _players_name_n5,
      _players_name_n6,
      _players_name_n7,
      _players_name_n8,
      _players_mentsu_pai_list_pai_num,
      _players_mentsu_pai_list_id,
      _players_mentsu_pai_list_flag,
      _players_mentsu_pai_len,
      _players_mentsu_len,
      _players_tehai_pai_num,
      _players_tehai_id,
      _players_tehai_is_tsumogiri,
      _players_tehai_is_riichi,
      _players_tehai_is_nakare,
      _players_tehai_len,
      _players_kawahai_pai_num,
      _players_kawahai_id,
      _players_kawahai_is_tsumogiri,
      _players_kawahai_is_riichi,
      _players_kawahai_is_nakare,
      _players_kawahai_len,
      _players_tsumohai_pai_num,
      _players_tsumohai_id,
      _players_tsumohai_is_tsumogiri,
      _players_tsumohai_is_riichi,
      _players_tsumohai_is_nakare,
      _players_is_tsumo,
      _players_is_riichi,
      _players_is_ippatsu,
      _players_score,
      _o.PlayerLen,
      _o.Bakaze,
      _o.Zikaze,
      _o.Tsumobou,
      _o.Riichibou,
      _o.Teban,
      _taku_n1_pai_num,
      _taku_n1_id,
      _taku_n1_is_tsumogiri,
      _taku_n1_is_riichi,
      _taku_n1_is_nakare,
      _taku_n2_pai_num,
      _taku_n2_id,
      _taku_n2_is_tsumogiri,
      _taku_n2_is_riichi,
      _taku_n2_is_nakare,
      _taku_n3_pai_num,
      _taku_n3_id,
      _taku_n3_is_tsumogiri,
      _taku_n3_is_riichi,
      _taku_n3_is_nakare,
      _taku_n4_pai_num,
      _taku_n4_id,
      _taku_n4_is_tsumogiri,
      _taku_n4_is_riichi,
      _taku_n4_is_nakare,
      _taku_n5_pai_num,
      _taku_n5_id,
      _taku_n5_is_tsumogiri,
      _taku_n5_is_riichi,
      _taku_n5_is_nakare,
      _taku_length,
      _o.TakuCursol);
  }
}

public class GameStateT
{
  public OpenMahjong.FixedStringT Title { get; set; }
  public OpenMahjong.PlayerT[] Players { get; set; }
  public uint PlayerLen { get; set; }
  public uint Bakaze { get; set; }
  public uint Zikaze { get; set; }
  public uint Tsumobou { get; set; }
  public uint Riichibou { get; set; }
  public uint Teban { get; set; }
  public OpenMahjong.TakuT Taku { get; set; }
  public uint TakuCursol { get; set; }

  public GameStateT() {
    this.Title = new OpenMahjong.FixedStringT();
    this.Players = new OpenMahjong.PlayerT[4];
    this.PlayerLen = 0;
    this.Bakaze = 0;
    this.Zikaze = 0;
    this.Tsumobou = 0;
    this.Riichibou = 0;
    this.Teban = 0;
    this.Taku = new OpenMahjong.TakuT();
    this.TakuCursol = 0;
  }
}


}
