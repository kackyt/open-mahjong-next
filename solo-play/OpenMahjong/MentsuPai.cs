// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace OpenMahjong
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MentsuPai : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public MentsuPai __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte PaiNum { get { return __p.bb.Get(__p.bb_pos + 0); } }
  public void MutatePaiNum(byte pai_num) { __p.bb.Put(__p.bb_pos + 0, pai_num); }
  public byte Id { get { return __p.bb.Get(__p.bb_pos + 1); } }
  public void MutateId(byte id) { __p.bb.Put(__p.bb_pos + 1, id); }
  public OpenMahjong.MentsuFlag Flag { get { return (OpenMahjong.MentsuFlag)__p.bb.Get(__p.bb_pos + 2); } }
  public void MutateFlag(OpenMahjong.MentsuFlag flag) { __p.bb.Put(__p.bb_pos + 2, (byte)flag); }

  public static Offset<OpenMahjong.MentsuPai> CreateMentsuPai(FlatBufferBuilder builder, byte PaiNum, byte Id, OpenMahjong.MentsuFlag Flag) {
    builder.Prep(1, 3);
    builder.PutByte((byte)Flag);
    builder.PutByte(Id);
    builder.PutByte(PaiNum);
    return new Offset<OpenMahjong.MentsuPai>(builder.Offset);
  }
  public MentsuPaiT UnPack() {
    var _o = new MentsuPaiT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MentsuPaiT _o) {
    _o.PaiNum = this.PaiNum;
    _o.Id = this.Id;
    _o.Flag = this.Flag;
  }
  public static Offset<OpenMahjong.MentsuPai> Pack(FlatBufferBuilder builder, MentsuPaiT _o) {
    if (_o == null) return default(Offset<OpenMahjong.MentsuPai>);
    return CreateMentsuPai(
      builder,
      _o.PaiNum,
      _o.Id,
      _o.Flag);
  }
}

public class MentsuPaiT
{
  public byte PaiNum { get; set; }
  public byte Id { get; set; }
  public OpenMahjong.MentsuFlag Flag { get; set; }

  public MentsuPaiT() {
    this.PaiNum = 0;
    this.Id = 0;
    this.Flag = OpenMahjong.MentsuFlag.FLAG_NONE;
  }
}


}
